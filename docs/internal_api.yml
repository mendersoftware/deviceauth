swagger: '2.0'
info:
  version: '0.1.0'
  title: Device authentication
  description: |
      An API for device authentication handling. Not exposed via the API Gateway,
      internal use only.

basePath: '/api/internal/v1/devauth/'
host: 'mender-device-auth:8080'
schemes:
  - http

produces:
  - application/json
consumes:
  - application/json

paths:
  /alive:
    get:
      operationId: Check Liveliness
      tags:
        - Internal API
      summary: >
          Trivial endpoint that unconditionally returns an empty 204 response
          whenever the API handler is running correctly.
      responses:
        204:
          description: Service is up and running
        500:
          description: >
              Internal API error
          schema:
            $ref: '#/definitions/Error'

  /health:
    get:
      operationId: Check Health
      tags:
        - Internal API
      summary: Check the health of the service
      responses:
        204:
          description: >
              Service is healthy and all dependencies are up and running.
        500:
          description: >
              Unexpected internal error
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              error: "internal error"
              request_id: "ffd712be-d697-4cb7-814b-88ff1e2eb5f6"
        503:
          description: >
              Service unhealthy / not ready to accept traffic. At least one
              dependency is not running.
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              error: "error reaching MongoDB: context deadline exceeded"
              request_id: "ffd712be-d697-4cb7-814b-88ff1e2eb5f6"

  /tokens/verify:
    post:
      operationId: Verify JWT
      tags:
        - Internal API
      summary: Check the validity of a token
      description: |
        Besides the basic validity check, checks the token expiration time and
        user-initiated token revocation. Services which intend to use it should
        be correctly set up in the gateway\'s configuration.
      parameters:
        - name: Authorization
          in: header
          description: The token in base64-encoded form.
          required: true
          type: string
      responses:
        200:
          description: The token is valid.
        400:
          description: Missing or malformed request parameters.
        401:
          description: Verification failed, authentication should not be granted.
        403:
          description: Token has expired - apply for a new one.
        500:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
  /tokens:
    delete:
      operationId: Revoke Device Tokens
      tags:
        - Internal API
      summary: Delete device tokens
      description: |
        This endpoint is designed to be used for device decommissionning
        and tenant account suspension purpose.
        For device decommissioning purpose both tenant_id and device_id parameters
        must be set. When both tenant_id and device_id parameters are set,
        all tokens will be deleted for device with given device_id.
        For tenant account suspension purpose only tenant_id parameter
        must be set. When device_id parameter is not set (only tenant_id parameter is set)
        all tokens for all tenant devices will be deleted.
      parameters:
        - name: tenant_id
          in: query
          type: string
          description: Tenant ID.
          required: true
        - name: device_id
          in: query
          type: string
          description: Device ID.
      responses:
        204:
          description: Tokens deleted.
        400:
          description: |
            Invalid parameters. See error message for details.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
  /tenant/{tenant_id}/limits/max_devices:
    get:
      operationId: Get Device Limit
      tags:
        - Internal API
      summary: Max device count limit
      parameters:
        - name: tenant_id
          in: path
          type: string
          description: Tenant ID.
          required: true
      responses:
        200:
          description: Successful response.
          schema:
            $ref: "#/definitions/Limit"
        400:
          description: |
            Invalid parameters. See error message for details.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: Update Device Limit
      tags:
        - Internal API
      summary: Update max device count limit
      parameters:
        - name: tenant_id
          in: path
          type: string
          description: Tenant ID.
          required: true
        - name: limit
          in: body
          required: true
          schema:
            $ref: "#/definitions/Limit"
      responses:
        204:
          description: Limit information updated.
        400:
          description: |
              The request body is malformed.
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: Clear Device Limit
      tags:
        - Internal API
      summary: Remove max device count limit
      parameters:
        - name: tenant_id
          in: path
          type: string
          description: Tenant ID.
          required: true
      responses:
        204:
          description: Limit information deleted.
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"

  /tenants:
    post:
      operationId: Create Tenant
      tags:
        - Internal API
      summary: Provision a new tenant
      description: |
          Sets up all tenant-related infrastructure, e.g. a migrated tenant's database.
      parameters:
        - name: tenant
          in: body
          description: New tenant descriptor.
          required: true
          schema:
            $ref: "#/definitions/NewTenant"
      responses:
        201:
          description: Tenant was successfully provisioned.
        400:
          description: Bad request.
        500:
          description: Internal server error.
          schema:
           $ref: "#/definitions/Error"

  /tenants/{tid}/devices/{did}/status:
    get:
      operationId: Device Status
      tags:
        - Internal API
      summary: Get the status of a tenant's device
      description: |
          Returns the overall status of the device, computed over the statuses of its various authsets.
      parameters:
        - name: tid
          in: path
          description: Tenant identifier.
          required: true
          type: string
        - name: did
          in: path
          description: Device identifier.
          required: true
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: '#/definitions/Status'
        400:
          description: Invalid parameters. See error message for details.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Tenant or device not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
  /tenants/{tid}/devices:
    get:
      operationId: List Devices
      tags:
        - Internal API
      summary: Get a list of tenant's devices.
      description: |
        Provides a list of tenant's devices, sorted by creation date, with optional device status filter.
      parameters:
        - name: tid
          in: path
          description: Tenant identifier.
          required: true
          type: string
        - name: status
          in: query
          description: |
            Device status filter. If not specified, all devices are listed.
          required: false
          type: string
          enum:
            - pending
            - accepted
            - rejected
            - preauthorized
            - noauth
        - name: page
          in: query
          description: Results page number
          required: false
          type: integer
          default: 1
        - name: per_page
          in: query
          description: Maximum number of results per page.
          required: false
          type: integer
          default: 20
          maximum: 500
      responses:
        200:
          description: An array of devices.
          schema:
            type: array
            items:
                $ref: '#/definitions/Device'
          headers:
            Link:
              type: string
              description: Standard header, we support 'first', 'next', and 'prev'.
        400:
          description: Missing/malformed request params.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'  

  /tenants/{tid}/devices/by/id:
    post:
      operationId: List Devices by ID
      tags:
        - Internal API
      summary: Retrieve the full device description from the given IDs.
      parameters:
        - name: tid
          in: path
          description: Tenant identifier.
          required: true
          type: string
        - name: deviceIDs
          in: body
          description: |
            Device status filter. If not specified, all devices are listed.
          required: true
          schema:
            type: array
            description: List of device IDs to expand.
            items:
              type: string
      responses:
        200:
          description: >
            Expanded list of input devices - input ordering is not preserved
            and non-existing devices are silently ignored.
          schema:
            type: array
            items:
                $ref: '#/definitions/Device'
        400:
          description: Missing/malformed request params.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'  

definitions:
  NewTenant:
    description: New tenant descriptor.
    type: object
    properties:
      tenant_id:
        description: New tenant's ID.
        type: string
    example:
      tenant_id: "58be8208dd77460001fe0d78"
  Limit:
    description: Tenant account limit.
    type: object
    properties:
      limit:
        type: integer
    required:
      - limit
    example:
      limit: 123
  Error:
    description: Error descriptor.
    type: object
    properties:
      error:
        description: Description of the error.
        type: string
      request_id:
        description: Request ID (same as in X-MEN-RequestID header).
        type: string
    example:
      error: "failed to decode request body: JSON payload is empty"
      request_id: "f7881e82-0492-49fb-b459-795654e7188a"
  Status:
    description: Admission status of the device.
    type: object
    properties:
      status:
        type: string
        enum:
          - pending
          - accepted
          - rejected
          - preauthorized
          - noauth
    required:
      - status
    example:
      status: "accepted"
  Device:
    type: object
    properties:
      id:
        type: string
        description: Mender assigned Device ID.
      identity_data:
        $ref: "#/definitions/IdentityData"
      status:
        type: string
        enum:
          - pending
          - accepted
          - rejected
          - preauthorized
          - noauth
      created_ts:
        type: string
        format: datetime
        description: Created timestamp
      updated_ts:
        type: string
        format: datetime
        description: Updated timestamp
      auth_sets:
        type: array
        items:
          $ref: "#/definitions/AuthSet"
      decommissioning:
        type: boolean
        description: Devices that are part of ongoing decomissioning process will return True
  AuthSet:
    description: Authentication data set
    type: object
    properties:
      id:
        type: string
        description: Authentication data set ID.
      pubkey:
        type: string
        description: >
          The device's public key (PEM encoding), generated by the device or
          pre-provisioned by the vendor. Currently supported public algorithms
          are: RSA, ED25519 and ECDSA.
      identity_data:
        $ref: "#/definitions/IdentityData"
      status:
        type: string
        enum:
          - pending
          - accepted
          - rejected
          - preauthorized
      ts:
        type: string
        format: datetime
        description: Created timestamp
  IdentityData:
    description: |
      Device identity attributes, in the form of a JSON structure.

      The attributes are completely vendor-specific, the provided ones are just an example.
      In reference implementation structure contains vendor-selected fields,
      such as MACs, serial numbers, etc.
    type: object
    properties:
      mac:
        description: MAC address.
        type: string
      sku:
        description: Stock keeping unit.
        type: string
      sn:
        description: Serial number.
        type: string
    example:
      mac: "00:01:02:03:04:05"
      sku: "My Device 1"
      sn:  "SN1234567890"

