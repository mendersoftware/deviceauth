swagger: '2.0'
info:
  title: Mender Device Identity API
  description: |
    API for device identity management and device auth request handling.

    The following security artifacts and materials are involved in the operation
    of this service:

    **Service**
    - tenant's ID token (UUID), uniquely identifying the tenant in the system
    - service's keypair for signing JWT tokens
    - SSL cert for server-side auth

    **Device**
    - device's public/private keypair, generated by the device or pre-provisioned
      out of band by the user
    - tenant's ID token
    - tenant's public key
    - SSL cert of the gateway
    - vendor-defined identity data set (MACs, Serial Numbers, etc.)
  version: "0.1"
schemes:
  - https
basePath: /v0.1
paths:
  /auth_requests:
    post:
      summary: Submit a device authentication request.
      description: |
        The device passes its vendor-defined identification data and tenant token
        to obtain a valid JSON Web Token to be used in subsequent Mender API communications.
        The id data is encrypted using the tenant's public key.

        The Identity Service consults the id data with the Device Admission Service,
        and either accepts the request, issuing a JWT (if the identity has been
        accepted by the user), or rejects it as unauthorized.

        This method simultaneously acts as a bootstraping one - upon the first
        auth request, the device is enrolled in the system, and we start
        tracking its state via generated Device ID.

        The returned JWT is
          * signed with the identity service's private key
          * encrypted with the device's public key

        JWTs are issued with the following standard fields:
          * 'exp' - expiry date
          * 'sub' - subject (Mender-generated device ID)
          * 'jit' - token's unique identifier

        Each request is signed with the device's private key. The 'X-MEN-Signature' custom header carries the signature computed as:

           BASE64(SIGN(privkey, SHA256(body)))

        An increasing 'seq_no' is used to prevent replay attacks. Upon the very first request
        the client can provide any non-zero uint64, which will be recorded by the server for subsequent requests.

      parameters:
        - name: auth_request
          in: body
          description: Auth request
          required: true
          schema:
            $ref: "#/definitions/AuthRequestNew"
        - name: X-MEN-Signature
          in: header
          type: string
          description: Base64 version of body signed with device's private key.
      responses:
        200:
          description: Authentication successful - a new JWT is issued and returned
                       (encrypted with device's public key).
          schema:
            type: number
            format: binary
        401:
          description: The device cannot be granted authentication (e.g. not accepted
                       by the user yet, or explicitly rejected).
        400:
          description: Missing/malformed request params or body.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: A history of device-submitted auth requests.
      description: |
        Provides a list of timestamped auth requests submitted by a device.
        Gives the tenant a historical perspective of a device's interaction with the auth service.
        If no device_id is provided, returns info on all tenant's devices, sorted by timestamp.
      parameters:
        - name: device_id
          in: query
          description: Mender-assigned device ID
          required: false
          type: string
        - name: page
          in: query
          description: Result page number
          required: false
          type: number
          format: integer
          default: 0
        - name: per_page
          in: query
          description: Number of results per page
          required: false
          type: number
          format: integer
          default: 20
      responses:
        200:
          description: An array of authentication requests
          schema:
            type: array
            items:
              $ref: '#/definitions/AuthRequest'
          headers:
            Link:
              type: string
              description: Standard header, we support 'first', 'next', and 'prev'.
        400:
          description: Missing/malformed request params.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Device or tenant not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /devices:
    get:
      summary: Get a list of tenant's devices.
      description: |
        Provides a list of tenant's devices, with optional device status filter.
      parameters:
        - name: tenant_token
          in: query
          description: A token uniquely identifying the tenant
          required: true
          type: string
        - name: status
          in: query
          type: string
          description: Device status filter
          enum:
            - pending
            - accepted
            - rejected
        - name: page
          in: query
          description: Results page number
          required: false
          type: number
          format: integer
          default: 0
        - name: per_page
          in: query
          description: Number of results per page
          required: false
          type: number
          format: integer
          default: 20
      responses:
        200:
          description: An array of devices.
          schema:
            type: array
            items:
                $ref: '#/definitions/Device'
          headers:
            Link:
              type: string
              description: Standard header, we support 'first', 'next', and 'prev'.
        400:
          description: Missing/malformed request params.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Tenant not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /devices/{id}:
    get:
      summary: Get a particular device.
      parameters:
        - name: id
          in: path
          description: Device identifier
          required: true
          type: string
      responses:
        200:
          description: Device found.
          schema:
            $ref: '#/definitions/Device'
        404:
          description: Device not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a device's state.
      description: |
        Allows changing the device's status. Valid state transitions
        - pending -> accepted
        - pending -> rejected
        - rejected -> accepted
      parameters:
        - name: id
          in: path
          description: Device identifier
          required: true
          type: string
        - name: device
          in: body
          description: Device representation
          required: true
          schema:
            $ref: "#/definitions/Device"
      responses:
        200:
          description: Device successfully updated.
        400:
          description: Missing/malformed request params or body.
        404:
          description: Device not found.
          schema:
            $ref: '#/definitions/Error'
        422:
          description: Invalid update operation (e.g. state transition)
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /devices/{id}/status:
    put:
      summary: Update device admission state
      parameters:
        - name: id
          in: path
          description: Device identifier
          required: true
          type: string
        - name: status
          in: body
          description: New status
          required: true
          schema:
            $ref: '#/definitions/Status'
      responses:
        303:
          description: Device updated
          headers:
            Location:
              type: string
              description: URI of updated device
        404:
          description: Not Found
          examples:
            application/json:
              error: Detailed error message
          schema:
            $ref: "#/definitions/Error"
        500:
          description: Internal Server Error
          examples:
            application/json:
              error: Detailed error message
          schema:
            $ref: "#/definitions/Error"
  /devices/{id}/token:
    get:
      summary: Retrieve a device's active JWT token.
      description: |
        Provides a descriptor of the device's current JWT token.
      parameters:
        - name: id
          in: path
          description: Mender-issued device identifier.
          required: true
          type: string
      responses:
        200:
          description: Device successfully updated.
        404:
          description: No JWT token found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tokens/{id}:
    delete:
      summary: Delete token
      parameters:
        - name: id
          in: path
          description: Unique token identifier.
          required: true
          type: string
      responses:
        204:
          description: Token successfully deleted.
        404:
          description: Token not found.
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /tokens/verify:
    post:
      summary: Check the validity of a token.
      description: |
        Other services (most notably the API gateway) should delegate token verification
        to the identity service via this endpoint.

        Besides the basic validity check, the service will take into account token
        expiration time and user-requested revocation.
      parameters:
        - name: token
          in: body
          description: The token base64 encoded form.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Token is valid.
        400:
          description: Missing/malformed request params.
        401:
          description: Verification failed - token should be rejected.
        403:
          description: Token has expired - reapply for a new one.
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  AuthRequestNew:
    type: object
    properties:
      id_data:
        type: string
        description: Vendor-specific JSON representation of device identity, encrypted
                     with the tenant's public key.

                     In reference implementation, it is a JSON structure
                     with vendor-selected fields, such as MACs, serial numbers, etc.
      tenant_token:
        type: string
        description: A tenant's unique token (issued by Mender via web GUI/API).
      pubkey:
        type: string
        description: The device's public key, generated by the device or pre-provisioned by the vendor.
    required:
      - id_data
      - tenant_token
      - pubkey
  AuthRequest:
    type: object
    properties:
      id_data:
        type: string
        description: Vendor-specific JSON representation of device identity, encrypted
                     with the tenant's public key.

                     In reference implementation, it is a JSON structure
                     with vendor-selected fields, such as MACs, serial numbers, etc.
      tenant_token:
        type: string
        description: A tenant's unique token (issued by Mender via web GUI/API).
      pubkey:
        type: string
        description: The device's public key, generated by the device or pre-provisioned by the vendor.
      seq_no:
        type: int
        description: An increasing, per-device request sequence number
      ts:
        type: string
        format: datetime
        description: Server-side timestamp of the request.
      status:
        type: string
        description: Request result
        enum:
          - pending
          - accepted
          - rejected
  Device:
    type: object
    properties:
      id:
        type: string
        description: Mender assigned Device ID.
      tenant_token:
        type: string
        description: A tenant's unique token (issued by Mender via web GUI/API).
      pubkey:
        type: string
        description: The device's public key, generated by the device or pre-provisioned by the vendor.
      id_data:
        type: string
        description: Vendor-specific JSON representation of device identity, encrypted
                     with the tenant's public key.

                     In reference implementation, it is a JSON structure
                     with vendor-selected fields, such as MACs, serial numbers, etc.
      status:
          $ref: "#/definitions/Status"
      created_ts:
          type: string
          format: datetime
          description: Created timestamp
      updated_ts:
          type: string
          format: datetime
          description: Updated timestamp
  Status:
    description: Admission status of the device
    type: object
    properties:
      status:
        type: string
        enum:
          - pending
          - accepted
          - rejected
    required:
      - status
  TokenDescriptor:
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: Corresponds to the the standard 'jti' claim, contains Used for tracking
                     the token for the purpose of revocation. Unique across the whole system.
      token:
        type: string
        description: Raw, Base64-encoded JWT token.
      status:
        type: string
        description: Current status of the token.
        enum:
          - active
          - revoked
  Error:
    description: Error descriptor
    type: object
    properties:
      error:
        description: Description of the error
        type: string
